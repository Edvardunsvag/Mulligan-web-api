// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MulliganApi.Data;

#nullable disable

namespace MulliganApi.Migrations
{
    [DbContext(typeof(MulliganDbContext))]
    partial class MulliganDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MulliganApi.Database.Models.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Par")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9a7bdccc-a6bc-4530-8d47-1354813ca6ba"),
                            CourseDescription = "Krokhol golfklubb description",
                            CourseName = "Krokhol",
                            Par = 0
                        });
                });

            modelBuilder.Entity("MulliganApi.Database.Models.CourseHole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HoleNumber")
                        .HasColumnType("int");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int>("Par")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseHole");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d88c8e17-19dc-4be0-a5f2-d330ed564a75"),
                            CourseId = new Guid("9a7bdccc-a6bc-4530-8d47-1354813ca6ba"),
                            HoleNumber = 1,
                            Length = 113,
                            Par = 3
                        },
                        new
                        {
                            Id = new Guid("803214e5-eb3c-4d41-89f2-3af3bae416be"),
                            CourseId = new Guid("9a7bdccc-a6bc-4530-8d47-1354813ca6ba"),
                            HoleNumber = 2,
                            Length = 295,
                            Par = 4
                        },
                        new
                        {
                            Id = new Guid("ce02674b-36cd-4e7b-bc01-4fe76e600a72"),
                            CourseId = new Guid("9a7bdccc-a6bc-4530-8d47-1354813ca6ba"),
                            HoleNumber = 3,
                            Length = 439,
                            Par = 5
                        },
                        new
                        {
                            Id = new Guid("74648ba3-ea57-481c-a06e-85a2367fb698"),
                            CourseId = new Guid("9a7bdccc-a6bc-4530-8d47-1354813ca6ba"),
                            HoleNumber = 4,
                            Length = 128,
                            Par = 3
                        },
                        new
                        {
                            Id = new Guid("9e5f7869-3d84-4df4-927b-c9a2912ce349"),
                            CourseId = new Guid("9a7bdccc-a6bc-4530-8d47-1354813ca6ba"),
                            HoleNumber = 5,
                            Length = 506,
                            Par = 5
                        },
                        new
                        {
                            Id = new Guid("5fd15305-e567-4074-8dbd-2c08a30cb75b"),
                            CourseId = new Guid("9a7bdccc-a6bc-4530-8d47-1354813ca6ba"),
                            HoleNumber = 6,
                            Length = 227,
                            Par = 4
                        },
                        new
                        {
                            Id = new Guid("eb9f52a2-939a-4211-abff-805dcc73f3fa"),
                            CourseId = new Guid("9a7bdccc-a6bc-4530-8d47-1354813ca6ba"),
                            HoleNumber = 7,
                            Length = 270,
                            Par = 4
                        },
                        new
                        {
                            Id = new Guid("bef94f29-4738-4ea4-b61e-6d0620fd07c0"),
                            CourseId = new Guid("9a7bdccc-a6bc-4530-8d47-1354813ca6ba"),
                            HoleNumber = 8,
                            Length = 298,
                            Par = 4
                        },
                        new
                        {
                            Id = new Guid("1ee20b51-b68f-4070-b691-6b3c1c40c964"),
                            CourseId = new Guid("9a7bdccc-a6bc-4530-8d47-1354813ca6ba"),
                            HoleNumber = 9,
                            Length = 330,
                            Par = 4
                        });
                });

            modelBuilder.Entity("MulliganApi.Database.Models.CourseTeeBox", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TeeBox")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("TeeBoxes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("06f6b7f5-a5b2-42f8-8feb-d87b920f0508"),
                            CourseId = new Guid("9a7bdccc-a6bc-4530-8d47-1354813ca6ba"),
                            TeeBox = 52
                        });
                });

            modelBuilder.Entity("MulliganApi.Database.Models.Note", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CourseHoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseHoleId");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("MulliganApi.Database.Models.Round", b =>
                {
                    b.Property<Guid>("RoundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Strokes")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoundId");

                    b.ToTable("Round");

                    b.HasData(
                        new
                        {
                            RoundId = new Guid("2f685fa9-c7f2-4afa-a97e-9e355e17f7b5"),
                            CourseId = new Guid("9a7bdccc-a6bc-4530-8d47-1354813ca6ba"),
                            Strokes = 45,
                            UserId = new Guid("b813162a-1fea-42c3-b541-c6324bad1d42")
                        });
                });

            modelBuilder.Entity("MulliganApi.Database.Models.RoundHole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HoleNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("RoundId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoundId");

                    b.ToTable("RoundHole");

                    b.HasData(
                        new
                        {
                            Id = new Guid("95e67745-7685-48a6-b4dc-c22676b6b76c"),
                            HoleNumber = 1,
                            RoundId = new Guid("2f685fa9-c7f2-4afa-a97e-9e355e17f7b5"),
                            Score = 2
                        },
                        new
                        {
                            Id = new Guid("919eb89e-09f8-4c7e-b7ce-0754e057d813"),
                            HoleNumber = 2,
                            RoundId = new Guid("2f685fa9-c7f2-4afa-a97e-9e355e17f7b5"),
                            Score = 6
                        },
                        new
                        {
                            Id = new Guid("5a5ec90b-2b8e-4d99-b4af-ee9fb249c0b4"),
                            HoleNumber = 3,
                            RoundId = new Guid("2f685fa9-c7f2-4afa-a97e-9e355e17f7b5"),
                            Score = 3
                        },
                        new
                        {
                            Id = new Guid("26098bfa-212c-4e09-b89b-7a90b0af593e"),
                            HoleNumber = 4,
                            RoundId = new Guid("2f685fa9-c7f2-4afa-a97e-9e355e17f7b5"),
                            Score = 3
                        },
                        new
                        {
                            Id = new Guid("21ed672f-d7da-4a0e-a137-247245af4404"),
                            HoleNumber = 5,
                            RoundId = new Guid("2f685fa9-c7f2-4afa-a97e-9e355e17f7b5"),
                            Score = 4
                        },
                        new
                        {
                            Id = new Guid("59662a03-255d-4d39-b2a2-59543f941450"),
                            HoleNumber = 6,
                            RoundId = new Guid("2f685fa9-c7f2-4afa-a97e-9e355e17f7b5"),
                            Score = 4
                        },
                        new
                        {
                            Id = new Guid("b5bb92be-2015-42a3-bb48-0afe22766775"),
                            HoleNumber = 7,
                            RoundId = new Guid("2f685fa9-c7f2-4afa-a97e-9e355e17f7b5"),
                            Score = 5
                        },
                        new
                        {
                            Id = new Guid("2a2c119f-cca4-4a15-b2d2-a5b9d49ae29d"),
                            HoleNumber = 8,
                            RoundId = new Guid("2f685fa9-c7f2-4afa-a97e-9e355e17f7b5"),
                            Score = 2
                        },
                        new
                        {
                            Id = new Guid("05982b0a-7044-453c-9290-592e056f6aac"),
                            HoleNumber = 9,
                            RoundId = new Guid("2f685fa9-c7f2-4afa-a97e-9e355e17f7b5"),
                            Score = 4
                        });
                });

            modelBuilder.Entity("MulliganApi.Database.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("MulliganApi.Database.Models.CourseHole", b =>
                {
                    b.HasOne("MulliganApi.Database.Models.Course", null)
                        .WithMany("CourseHoles")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MulliganApi.Database.Models.CourseTeeBox", b =>
                {
                    b.HasOne("MulliganApi.Database.Models.Course", null)
                        .WithMany("TeeBoxes")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MulliganApi.Database.Models.Note", b =>
                {
                    b.HasOne("MulliganApi.Database.Models.CourseHole", "CourseHole")
                        .WithMany()
                        .HasForeignKey("CourseHoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseHole");
                });

            modelBuilder.Entity("MulliganApi.Database.Models.RoundHole", b =>
                {
                    b.HasOne("MulliganApi.Database.Models.Round", null)
                        .WithMany("Holes")
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MulliganApi.Database.Models.Course", b =>
                {
                    b.Navigation("CourseHoles");

                    b.Navigation("TeeBoxes");
                });

            modelBuilder.Entity("MulliganApi.Database.Models.Round", b =>
                {
                    b.Navigation("Holes");
                });
#pragma warning restore 612, 618
        }
    }
}
